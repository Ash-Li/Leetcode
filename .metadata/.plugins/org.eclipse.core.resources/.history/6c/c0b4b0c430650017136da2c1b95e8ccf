import java.util.Stack;
/*
Reverse digits of an integer.

Example1: x = 123, return 321
Example2: x = -123, return -321

click to show spoilers.

Note:
The input is assumed to be a 32-bit signed integer. Your function should return 0 when the reversed integer overflows.
*/

public class reverse_int {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int a = 123;
		int b = -123;
		Solution s = new Solution();
		System.out.print(s.reverse(b));
	}

}
class Solution {
    public int reverse(int x) {
    	int r = 0;
    	boolean iflessthan0 = false;
        if(x < 0) {
        	x = Math.abs(x);
        	iflessthan0 = true;
        	if(x < -2147483648) return 0;
        }
        if(x > 2147483647) return 0;
        
        Stack s = new Stack();
        int last;//末尾数
        while(x >= 10) {
             last = x % 10;
             x = x/10;
             s.push(last);
        }
        s.push(x);
        
        int fir;//第一个数
        for(int i = s.size(),j = 0;i > 0;i--,j++) {
        	fir = (int)s.pop();
        	r += fir * Math.pow(10,j);
        }
        if(iflessthan0 == true) r = -r;
        return r;
    }
}